stages:
  - quality
  - test

cache:
  key: "${CI_JOB_NAME}"
  paths:
    - .cache/pip
    - node_modules
    - .venv

# Templates
.quality-frontend: &quality-frontend
  image: node:12-slim
  stage: quality

.quality-backend-template: &quality-backend
  image: python:3.8-slim
  stage: quality
  variables:
    PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Quality jobs
check-eslint:
  <<: *quality-frontend
  script:
    - yarn install
    - yarn run lint:js

check-stylelint:
  <<: *quality-frontend
  script:
    - yarn install
    - yarn run lint:scss

check-black:
  <<: *quality-backend
  before_script:
    - pip install 'black==19.10b0'
  script: black --check --diff {{cookiecutter.project_slug}} tests

check-isort:
  <<: *quality-backend
  before_script:
    - pip install 'isort[pyproject]==4.3.21'
  script: isort --recursive --check-only --diff {{cookiecutter.project_slug}} tests

# Testing jobs
test:
  coverage: '/TOTAL\s+\d+\s+\d+\s+(\d+%)/'
  stage: test
  image: python:3.8
  services:
    - postgres:11-alpine
  variables:
    PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
    POSTGRES_DB: test_db
    POSTGRES_USER: test_user
    POSTGRES_PASSWORD: secret
  script:
    - export DATABASE_URL=postgres://$POSTGRES_USER:$POSTGRES_PASSWORD@postgres:5432/$POSTGRES_DB
    - apt-get update -qy
    - pip install -U pip poetry
    - poetry config virtualenvs.in-project true
    - poetry --version
    - poetry install -vv --no-interaction --no-ansi --no-root
    - .venv/bin/pytest -n auto --reuse-db --cov={{cookiecutter.project_slug}} tests
