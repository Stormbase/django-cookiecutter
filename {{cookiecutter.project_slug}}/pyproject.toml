[tool.poetry]
name = "{{cookiecutter.project_slug}}"
version = "{{cookiecutter.project_version}}"
description = "{{cookiecutter.project_description}}"
authors = ["{{cookiecutter.author}} <{{cookiecutter.author_email}}>"]
license = "{{cookiecutter.license}}"
readme = "README.md"
include = ["manage.py"]

[tool.poetry.dependencies]
python = "^3.9"
django = "^3.1,<3.2"
django-environ = "^0.4.5"
whitenoise = {extras = ["brotli"], version = "^5.0.1"}
psycopg2 = "^2.8.4"
uwsgi = "^2.0.18"

[tool.poetry.dev-dependencies]
pytest = "^6.0"
black = "20.8b1"
isort = "^5.0.3"
ipython = "^7.10.2"
ipdb = "^0.13.3"
pre-commit = "^2.0.1"
pytest-cov = "^2.8.1"
pytest-django = "^3.7.0"
pytest-xdist = "^2.1.0"
pytest-sugar = "^0.9.4"

[tool.isort]
force_grid_wrap=0
include_trailing_comma=true
line_length=79
multi_line_output=3
use_parentheses=true
default_section = "THIRDPARTY"
known_first_party = "{{cookiecutter.project_slug}}"
no_lines_before = "LOCALFOLDER"
skip = "migrations"
sections = ["FUTURE","STDLIB","THIRDPARTY","FIRSTPARTY","LOCALFOLDER"]

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "{{cookiecutter.project_slug}}.settings.testing"
testpaths = "tests"
django_find_project = true
filterwarnings = """
ignore
default:::{{cookiecutter.project_slug}}.*
"""
junit_family="xunit2"

[tool.coverage.run]
omit = ["*wsgi.py",
        "*asgi.py",
        "*testing.py",
        "*develop.py",
        "*production.py"
        ]

[build-system]
requires = ["poetry>=1.1"]
build-backend = "poetry.masonry.api"
